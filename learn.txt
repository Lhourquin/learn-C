HEAP : The term "heap" refers to memory that C manages on our behalf when we need to "borrow" a bit of memory and give it back later. There a are a lot of couple of issues with a simple heap implementation. First, if we "forget" to call free(), when we are done with the memory, we have created "memory leak" and our program eventually will run out of memory and abort. C places the responsability of giving back any dynamically allocated memory on the programmer. Modern language like Java, JavaScript, Python keep track of when we stop using a dynamic memory layer that can autmaticaly reclaim the memory. this.

Arithmetic opertations: + - * / %
Comparion Operators: == != <> <= 
Variable naming rules - letter/underscore + numbers/letters/underscores - also break and continue loops
Constant similar except for strings and characters and booleans
Both have int / float, and char /byte
	- C has no str, or dict
	- Python has noo strcut or double

Difference between Python and C:
Boolean operators
	- and / not  / or versus && ! ||
C for loops are inderterminant (i.E no for ... in in C)
C has no pre defined True or False
None and NULL are similar concepts but quite different(0 in C ?)
Strings and character arrays are similar consepts by *very* different
C has no list, or dict
Python has no struct - float in Python is C double
source : https://www.youtube.com/watch?v=PaPN51Mm5qQ
==================================================================================================================================

What are the header files ? 

in the first line we have #include <stdio.h> , the include part is a prprocessor command that tells the C compiler to include file. 
It tells the compiler ton include the stio.h header file. 
Header files are external libraries, this mean that some developers have written somme functionality and features taht are not included at the core of the C language. 
By adding header files to your code, you get addional functionality tat you can use in your programs without having to write the code from scratch. 
The stio.h header file stands for standard input-output. It contains function definition for input and output operations, such as functions for gathering user data and printing data to the console. 
Specifically, it provides functions such as printf() and scanf(). 
So this line (#include <stdio.h>) is necessary to use printf() or scanf() functionm if we don't include this stdio header file at the top of the code, the compiler return error and cannot understand what the printf()/scanf() function is.

What are the main() function in C ?

int main(void) {} is the main function and starting point for every C program.
Is the first thing that is called when the program is executed.
Every program must include a main() function.
The int keyword in int main() {} indicates the return value of main() function.
In this case, the function will return an integer number.
And the void keyword inside the main() function indicates that the function receives no arguments.
Anythings inside the curly braces,{}, in considred the body of the functionm here is where we include the code we want to write.Any code written here will allways run first.
This line acts as a boilerplate and starting point for all C programs. It lets the computer know where to begin reading the code when exectes your programs. 

What is the printf() function in C ?

Inside the function body, the line printf("Hello, Wolrd !\n"); prints the text Hello, World! to the console (this text is also know as a string).
Whenever you want to display anything, use the the printf() function.
In C, the semicolon ';' terminates the statement. All statements need to end with semicolon, as it identifies the end of the statement. Semicolon in C is similar to how full stop/period ends a sentence.

What are escape sequence in C ?

the \n at the end of printf("Hello, World! \n"); it's called an escape sequence, which means that is a character that create a newline and tells the cursor to move to the next line when it sees it.
In programming, an escape sequence is a combination of characters that represents a special character within a string.
They provide a way to include special chatacter that are difficult to represent irectly in a string.
They consist of a backslash, also known as the escape character, followed by one or more additional characters.
The escape sequence for a newline character is \n.
For instance, another escape seauence is \t. The \t represents a tab character, and will insert a space within a string.

How to compile and run C program ?

Any code we write in C is called source code.
The computer does'nt understand any of the C statements we have written, so the source code need to be translated to machine code with a compiler. 
The compiler will read the program and translate it into format closer to the computer's native language and make the program suitable for exection.
We will be able to see the output of the program after the compilation.
The compilation of a C program consists of four steps: 
- Preprocessing
- Conpilation
- Assembling
- Linking.

Preprocessing: The preprocessor scans the source code to find preprocessor directive, which are any line with a # symbol, such as #include.
Once the preprocessor finds these lines, it substitues them with something else.
For exq;ple, when the preprocessor finds the line #include <stdio.h> , the #include tells the preprocessor to include all the code from the stdio.h header file.
So,  it replace the #include <stdio.h> line with the actual contents of the stdio.h file.
the output of this phase is a modified version of the source code.
After the preprocessing, the next step is the compilation phase, where the modified source code gets translated into the corresponding assembly code.
If there are any errors, compilation will fail, and you need to fix them to continue.
The next step is the assembly phase, where the assembler converts the generated assembly code statements into machine code instructions.
The output of this phaes is an object file, which contains the machine code instructions.
the last step is the linking phase.
Linking is the process of combining the object file generated from the assembly phase with any necessary libraries to create the final executable binary file.
To do all this things, we run the command gcc my-file.c on the terminal.
The gcc part of the command refers to the C compiler, and ;y-file.c contains the C code that you want to compile.
After the compiler running and don't display any error, run the command ls on the terminal, you will see:
a.out my-file.c
we see the a.out file, this is the executable file containing the source code statements in their corresponding binary instructions.To run this file, enter the command 
./a.out
This command tells the computer to look in the current directory ' ./ ' for a file named a.out
We also have the option to name the executable file instead of leaving it with the default a.out name. Like this:
gcc -o theNameIWantToGive my-file.c
This command with the -o option (which stands for output) tells the gcc compiler to create an executable file named theNameIWantToGive
to run the new executabe file, just enter:
./theNameIWantToGive
NOTE: Whenever you make change in your source code file, you have to repeat the process of compiling and running your program from the beggining to see the changes you made.

